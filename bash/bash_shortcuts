# Bash shortcuts
function sbash() {
    if [ "$(uname)" == "Darwin" ]; then
        source ~/.bash_profile;
        echo 'bash_profile reloaded!'
    elif [ "$(uname)" == "Linux" ]; then
        source ~/.bashrc;
        echo 'bashrc reloaded!'
    fi
}

function remap_caps() {
    setxkbmap -option 'caps:ctrl_modifier'
    xcape -t 150 -e 'Caps_Lock=Escape;Control_L=Escape;Control_R=Escape'
}
if [ $HOSTNAME = "jarwin" ]; then
    remap_caps
fi

alias renew="sudo ipconfig set en0 BOOTP && sudo ipconfig set en0 DHCP"

HISTCONTROL=ignoreboth
HISTIGNORE='ls:bg:fg:history:hh'
alias hh=history
alias clear_history='cat /dev/null > ~/.bash_history && history -c'

# Tmux shortcut
function tnew {
    tmux new-session -As `basename $PWD`
}

# Pandoc shortcuts
function md_to_pdf() {
    pandoc -V geometry:margin="$1"cm -o $3 $2
}

# Python shortcuts
alias py='ipython -i'
alias pt='py.test -s --pdb'
alias py3='python3 -i'
alias coco='coconut -t 36'
alias icoco='coco --ipython console'
alias wcoco='coco -t 36 -w'
alias jpy="jupyter notebook"

function mkinit() {
    echo '' >> __init__.py
}

function remove_pyc() {
    find . -name "*.pyc" -exec rm -rf {} \;
}

function purge_py() {
    find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
}

# Haskell shortcuts
alias ghci='stack ghci'
alias ho='hoogle'

function auto_stack_test() {
    do_if_read "$1" "stack test"
}

function hs_script() {
    touch "$1"
    echo "#!/usr/bin/env stack"     >> "$1"
    echo "{- stack"                 >> "$1"
    echo "     --resolver lts-11.7" >> "$1"
    echo "     exec ghci"           >> "$1"
    echo "-}"                       >> "$1"
    echo ""                         >> "$1"
    echo "main :: IO ()"            >> "$1"
    echo "main = return ()"         >> "$1"
}

# Scala shortcuts
alias sc='scala -i'

alias samm='sbt ammonite:run'
alias sbt="sbt -mem 2048"

# C++ shortucts
function gpp() {
    g++ -pipe -std=c++11 -lm -o temp "$1"
    if (( $# == 1 )); then
        ./temp
    else
        cat "$2" | ./temp

    fi

    rm temp
    echo ""
    rm a.out
}

# Git shortcuts
function gsu() {
    git submodule init;
    git submodule update;
}

function diffs() {
    vim `git ls-files -m` -p;
}

function echo_and_pull() {
    printf 'Pulling the repository %s...\n' "${PWD##*/}";
    git pull;
}

alias gst='git status'
alias gpl='git pull'
alias gps='git push'
alias gco='git commit'
alias gb='git branch'
alias gch='git checkout'

# Dotfiles shortucts
function update_dots() {
    cd ~/dotfiles && echo_and_pull;
    gsu;
    nvim +PlugInstall +qall
}

function gpa() {
    cwd=$(pwd)
    update_dots;
    update_cmls;
    cd $cwd;
}

function recreate_symbolic_links() {
    bash ~/dotfiles/bash/recreate_symbolic_links
}

function setup_nvim() {
    nvim +PlugInstall +qall;
    nvim +PlugUpdate +qall;
    nvim +PlugInstall +qall;
}

function clone_dotfiles() {
    git clone git@github.com:anthony-khong/dotfiles.git;
    cd dotfiles;
    gsu;

    recreate_symbolic_links;

    setup_nvim;
    sbash;
}

function fix_nvim_tmux_navigator () {
    infocmp $TERM | sed 's/kbs=^[hH]/kbs=\\177/' > $TERM.ti
    tic $TERM.ti
}

function setup_parinfer_neovim () {
    cd ~/dotfiles/vim/plugged/parinfer-rust/cparinfer
    cargo build --release
}

function install_lein () {
    curl https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > lein
    sudo mkdir -p /usr/local/bin/
    sudo mv lein /usr/local/bin/lein
    sudo chmod a+x /usr/local/bin/lein
    lein
}

# Navigation shortcuts
function papers() {
    cd ~/Dropbox/Interesting\ Papers/
}

function dots() {
    cd ~/dotfiles/
}

function atools() {
    cd ~/mooc/algorithmic_toolbox
    }

function ll() {
    if [ ! -z $1 ]
    then
        find "$1" -type f
    else
        find . -type f
    fi
}

# Networking shortcuts
function jarwin() {
    ssh -4 -X akkhong@jarwinjkt.zapto.org
}

function draape() {
    ssh root@128.199.230.91
}

function flush_dns_cache() {
    sudo dscacheutil -flushcache
    sudo killall -HUP mDNSResponder
    say cache flushed
}

function check_my_ip() {
    curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//'
}

# Vim shortcuts
alias vi="/usr/bin/vim -p"
alias vim="nvim -p"
alias vff="nvim +'FZF ~'"
function eff() {
    vim $(fzf)
}

function vs() {
    touch "$1"
    chmod +x "$1"
    vim "$1"
}

# Spacemacs shortcuts
alias emacs="emacs -nw"

# Watch
function do_if_read() {
    ls "$1" | entr bash -c "$2; echo Last executed $(date)"
}

function auto_md_to_pdf() {
    local pdf_path="${1%.*}.pdf"
    local shortcuts="~/dotfiles/bash/bash_shortcuts"
    ls "$1" | entr bash -c "source $shortcuts; md_to_pdf 3 $1 $pdf_path; echo Last compiled: $(date)"
}

# TODO: add argument for pt
function auto_pytest() {
    rg --files "$1" |  entr bash -c "py.test $3; echo Last tested $(date)"
}

function auto_pt() {
    rg --files "$1" |  entr bash -c "py.test -s --pdb $3; echo Last tested $(date)"
}

# Jekyll
alias jserve="bundle exec jekyll serve --drafts --watch"

# Karabiner
alias karabiner="/Applications/Karabiner.app/Contents/Library/bin/karabiner"

function fix_cuda_compile() {
    sudo ldconfig /usr/local/cuda/lib64
}

# Youtube DL
alias ytdl_mp3="youtube-dl --extract-audio --audio-format mp3"

# Carvil
function revenue() {
    ipython ~/carvil/scripts/revenue_cli.py "$@"
}

function start_db() {
    ~/.dropbox-dist/dropboxd
}

function revenue_breakdown() {
    ipython ~/carvil/scripts/revenue_check.py "$@"
}

# Docker
function docker_cleanup_images() {
    docker rmi $(docker images -q)
}

function docker_cleanup_containers() {
    docker rm $(docker ps -a -q)
}

function gpy() {
    DEST="/grist"
    docker run -v ~/grist:"$DEST" -it grist_image ipython -i "$DEST/$1"
}

function pyml() {
    docker run -v "$PWD":"/root/$(basename $PWD)" -it ml-dev
}

function pt_docker() {
    DIRNAME="$(basename $PWD)"
    docker run -v "$PWD":"/root/$DIRNAME" -it --entrypoint py.test ml-dev "$DIRNAME" -s --pdb
}

# Ctags
function rctags() {
    ctags -R -f ./.git/tags .
}

# Kitty
alias kitty="/Applications/kitty.app/Contents/MacOS/kitty"
