snippet dp
#################### ${1:message} ####################
endsnippet

snippet sb
# ---------------------------------------------------------------------------
# ${1:${VISUAL:Section}}
# ---------------------------------------------------------------------------
endsnippet

snippet sk
import pytest
@pytest.mark.skip
endsnippet

snippet te "Try / Except" b
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:msg}:
	print msg
	import pdb; pdb.set_trace() # BREAKPOINT
endsnippet

snippet todo
# TODO (By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`)
endsnippet

snippet td
# TODO: ${1:message}
# By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`
endsnippet

snippet tdd
# TODO: docstrings
# By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`
endsnippet

snippet tdi
# IDEA TODO: docstrings
# By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`
endsnippet

snippet nt
# NOTE: ${1:message}
# By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`
endsnippet

snippet ps
pass # TODO - by `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`
endsnippet

snippet dtt "Date and time with a T separator" w
`!v strftime('%z')`
endsnippet

snippet ifm
if __name__ == '__main__':
	${1:main()}
endsnippet

snippet pdb
import pdb; pdb.set_trace() # BREAKPOINT
endsnippet

snippet bp
breakpoint()
endsnippet

snippet rdep
raise DeprecationWarning, "By `echo $USER` on `!v strftime("%A %d %B %Y %R %Z")`"
endsnippet

snippet pdump
with open(${1:path}, 'wb') as f:
	cPickle.dump(${2:obj}, f, protocol=cPickle.HIGHEST_PROTOCOL)
endsnippet

snippet pload
with open(${1:path}, 'rb') as f:
	${2:obj} = cPickle.load(f)
endsnippet

###############################################################################
snippet plt
import matplotlib.pyplot as plt
endsnippet

snippet sns
import seaborn as sns; sns.set()
endsnippet

snippet aplt
# This allows figures to be saved through SSH
import matplotlib
matplotlib.use('Agg')
endsnippet

snippet np
import numpy as np
endsnippet

snippet tf
import tensorflow as tf
endsnippet

snippet pd
import pandas as pd
endsnippet

snippet pl
import polars as pl
endsnippet

###############################################################################

snippet visual_te "Try / Except" b
try:
	${VISUAL:}
except Exception as msg:
	print msg
	import pdb; pdb.set_trace() # BREAKPOINT
endsnippet

snippet visual_td
# TODO${1: }
# By `echo $USER` on `!v strftime("%c")`
"""
${VISUAL:}
"""
endsnippet
